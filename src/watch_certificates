#!/usr/bin/env bash
#
# Updates certificates when they're renewed. 
#
set -e

LOGNAME=$(basename $0)
RENEWTIME="${RENEWTIME:-3300}"  # How many seconds before expiration to start watching for renwal

write_log() {
   echo "[${LOGNAME}] $@"
}

get_attr() {
   ATTR=$1
   ldapsearch -LLLb "cn=config" -s base "${ATTR}" -z 1 2>&1 \
   | grep "${ATTR}" | cut -f2 -d' '
}

set_attr() {
   ATTR=$1
   VALUE=$2
   write_log "Setting ${ATTR} to ${VALUE}"
   ldapmodify -cQ<<EOF 2>&1 | ts "[$LOGNAME]"
dn: cn=config
changetype: modify
replace: ${ATTR}
${ATTR}: ${VALUE}
EOF
}

while sleep 1m; do
   CA_FILE=$(get_attr "olcTLSCACertificateFile")

   if [ -z "${CA_FILE}" ]; then
      write_log "Certificates are not configured."
      break
   fi

   if [ ! -f "${CA_FILE}" ]; then
      write_log "Certificate CA file missing: ${CA_FILE}. Checking again in 1 minute."
      continue
   fi

   CRTFILE=$(get_attr "olcTLSCertificateFile")
   if [ ! -f "${CRTFILE}" ]; then
      write_log "Certificate file missing: ${CRTFILE}. Checking again in 1 minute."
      continue
   fi

   KEYFILE=$(get_attr "olcTLSCertificateKeyFile")
   if [ ! -f "${KEYFILE}" ]; then
      write_log "Certificate key file missing: ${KEYFILE}. Checking again in 1 minute."
      continue
   fi

   # check expiry
   EXPIRY=$(openssl x509 -noout -enddate -in "${CRTFILE}" | cut -d = -f2)
   CURRENT_EPOCH=$(date +%s)
   TARGET_EPOCH=$(date -d "${EXPIRY}" +%s)
   SLEEP_SECONDS=$(( $TARGET_EPOCH - $CURRENT_EPOCH - ${RENEWTIME}))

   if [ $SLEEP_SECONDS -gt 0 ]; then
      write_log "Waiting until $RENEWTIME seconds before $EXPIRY ($SLEEP_SECONDS seconds) to renew the certificates"
      sleep $SLEEP_SECONDS
   fi

   write_log "Renewing the certificates"

   until openssl x509 -noout -checkend ${RENEWTIME} -in "${CRTFILE}"; do
      write_log "Waiting 1 minute for server to generate renewed certificate."
      sleep 1m
   done

   write_log "Certificate has been renewed"
   set_attr "olcTLSCACertificateFile" "${CA_FILE}"
   set_attr "olcTLSCertificateFile" "${CRTFILE}"
   set_attr "olcTLSCertificateKeyFile" "${KEYFILE}"
done

write_log "script exited"
exit 0
